version: '3.8'


services:
  nginx:
    build:
        context: nginx
    container_name: nginx
    restart: always
    ports:
      - "443:443"
    networks:
        - transcendence-net
    volumes:
      - ./front:/usr/share/nginx/html
      - ./nginx/certs:/etc/nginx/certs

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:0.8.0
    container_name: nginx-exporter
    ports:
      - "9113:9113"
    command:
      - -nginx.scrape-uri
      - http://nginx:443/stub_status
    networks:
      - transcendence-net

  db:
    image: postgres:16-alpine
    container_name: db
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    expose:
        - "5432"
    ports:
      - "5432:5432"
    volumes:
      - ./db:/var/lib/postgresql/data
    networks:
      - transcendence-net

  back:
    container_name: back
    build:
      context: back
    volumes:
      - ./back/src:/srv:Z
    environment:
      - POSTGRES_HOST
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_PORT
      - DBASE
      - RESET_MIGRATIONS
      - CLIENT_ID
      - CLIENT_SECRET
    restart: always
    expose:
      - "8000"
    networks:
        - transcendence-net
    depends_on:
      - db

  front:
    image: nginx:alpine
    container_name: front
    restart: always
    ports:
      - "8081:80"
    volumes:
      - ./front:/usr/share/nginx/html
    networks:
      - transcendence-net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    user: "1000"
    expose:
      - "3000"
    ports:
      - "3000:3000"
    environment:
      - "GF_SERVER_ROOT_URL=http://localhost:8081/grafana/"
      - "GF_SERVER_HTTP_PORT=3000"
      - "GF_SERVER_PROTOCOL=http"
      - "GF_SERVER_DOMAIN=localhost:8081"
      - "GF_SERVER_SERVE_FROM_SUB_PATH=true"
    volumes:
      - '$PWD/grafana_data:/var/lib/grafana'
    networks:
      - transcendence-net

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    user: "1000"
    expose:
      - "9090"
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=5d'
      - '--web.enable-lifecycle'
      - '--web.external-url=http://localhost:8081/prometheus/'
      - '--web.enable-remote-write-receiver'
      - '--web.route-prefix=/prometheus/'
    volumes:
      - '$PWD/prometheus.yml:/etc/prometheus/prometheus.yml'
      - '$PWD/prometheus_data:/prometheus'
      - '$PWD/prometheus_rules:/etc/prometheus/prometheus_rules'
    networks:
      - transcendence-net

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    user: "1000"
    ports:
      - "9100:9100"
    volumes:
      - '/:/host:ro,rslave'
    networks:
      - transcendence-net

  cadvisor:
    image: google/cadvisor:v0.32.0
    container_name: cadvisor
    hostname: cadvisor
    restart: unless-stopped
    user: "1000"
    expose:
      - "8080:8080"
    volumes:
      - '/:/rootfs:ro'
      - '/var/run:/var/run:rw'
      - '/var/lib/docker/:/var/lib/docker:ro'
      - '/dev/disk:/dev/disk:ro'
    devices:
      - '/dev/kmsg'
    privileged: true
    networks:
      - transcendence-net

networks:
  transcendence-net:
    name: transcendence-net
    driver: bridge
