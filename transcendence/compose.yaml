services:
  nginx:
    build:
        context: nginx
    container_name: nginx
    restart: always
    ports:
      - "443:443"
    networks:
        - transcendence-net
    volumes:
      - ./front:/usr/share/nginx/html

  db:
    image: postgres:16-alpine
    container_name: db
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    expose:
        - "5432"
    ports:
      - "5432:5432"
    volumes:
      - ./db:/var/lib/postgresql/data
    networks:
      - transcendence-net

  back:
    container_name: back
    build:
      context: back
    volumes:
      - ./back/src:/srv:Z
    environment:
      - POSTGRES_HOST
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_PORT
      - DBASE
      - RESET_MIGRATIONS
      - CLIENT_ID
      - CLIENT_SECRET
    restart: always
    expose:
      - "8000"
    networks:
        - transcendence-net
    depends_on:
      - db

  front:
    image: nginx:alpine
    container_name: front
    restart: always
    ports:
      - "8081:80"
    volumes:
      - ./front:/usr/share/nginx/html
    networks:
      - transcendence-net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - './grafana_data:/var/lib/grafana'

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=1y'
      - '--web.enable-lifecycle'
    volumes:
      - './prometheus.yml:/etc/prometheus/prometheus.yml'
      - './prometheus_data:/prometheus'

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    network_mode: host
    pid: host
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - './metrics_data:/host:ro,rslave'

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    expose:
      - "8080"
    volumes:
      - './rootfs:/rootfs:ro'
      - './var/run:/var/run:rw'
      - './sys:/sys:ro'
      - './var/lib/docker/:/var/lib/docker:ro'

networks:
  transcendence-net:
    name: transcendence-net
    driver: bridge
